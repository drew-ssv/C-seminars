/// Задача 73: Есть число N. Сколько групп M, можно получить при разбиении всех чисел на группы, 
// так чтобы в одной группе все числа в группе друг на друга не делились? 
// Найдите M при заданном N и получите одно из разбиений на группы N ≤ 10²⁰.
// Например, для N = 50, M получается 6
// Группа 1: 1
// Группа 2: 2 3 11 13 17 19 23 29 31 37 41 43 47
// Группа 3: 4 6 9 10 14 15 21 22 25 26 33 34 35 38 39 46 49
// Группа 4: 8 12 18 20 27 28 30 42 44 45 50
// Группа 5: 7 16 24 36 40
// Группа 6: 5 32 48

// // Сумму всего массива нужно разделить на кол-во групп (ср.арифметическое число в группе, к которому будем стремиться) и по-очереди набирать в группы, 
// начиная с самой большой цифры (значения элемента) из массива. 
// Как только сумма в группе превысит среднее арифметическое - пропустить и 
// перейти к следующей группе и так до тех пор, пока не останется самое меньшее из всего массива, 
// которое после 1-го цикла превышения попадает в группу с самым минимальным превышением целевой суммы.
using System;
using System.Collections.Generic;
using System.Text.RegularExpressions;
namespace ReadKey
{
    public class Program
    {
        public static void Main(string[] args)
        {
            Console.WriteLine("Hello, world!");
                
            Console.Write("Print N: ");
                int numb = Int32.Parse(Console.ReadLine());
                int groop = 0;
                for(int i= 1; i<=numb; i++)
                {
                    if(i ==Math.Pow(2,groop))
                    {
                        Console.WriteLine();
                        groop++;
                        Console.Write($"{groop}-groop");
                    }
                    Console.Write($"{i,5}") ;
                }
                Console.ReadKey();         
        
        }
 
// Дополнительная задача 74*: 4 друга должны посетить 12 пабов (int num_bars), в котором выпить по британской пинте пенного напитка (beer). 
// До каждого бара идти примерно 15-20 минут(dist int[]), каждый пьет пинту за 15 минут (int time_0). 
// У первого друга лимит выпитого 1.1 литра, у второго 1.5, у третьего 2.2 литра, у 4 - 3.3 литра, это их максимум (double [] lim). 
// Необходимо выяснить, до скольки баров смогут дойти каждый из друзей(Пройденное расстояние (в барах)), пока не упадет. 
// И сколько всего времени будет потрачено на выпивку.


        {
            Console.WriteLine ("Hello, world!");
            int num_bars = 12;
            double beer = 0.56826;
            double [] lim = {1.1, 1.5, 2.2, 3.3};
            int dist = new Random().Next(15, 21);   
            int drinking_pause = 15;
            Console.WriteLine($"Между барами идти {dist} минут");
            for (int i = 0; i < lim.Length; i++)
            {
                double total_drink = 0;
                double limit_for_friend = lim[i];
                int bars_sum = 0;            
                while (total_drink + beer <= limit_for_friend && bars_sum <= num_bars)
                {
                    total_drink += beer;
                    bars_sum ++;
                }
            double totalTime = bars_sum * (drinking_pause + dist) + (bars_sum - 1) * dist;  
            Console.WriteLine($"{i + 1}-ый друг: упадет в баре № {bars_sum}, на {totalTime} минуте");           
            }      
        }
    }
}
//Между барами идти 17 минут
//1-ый друг: упадет в баре № 1, на 32 минуте
//2-ый друг: упадет в баре № 2, на 81 минуте
//3-ый друг: упадет в баре № 3, на 130 минуте
//4-ый друг: упадет в баре № 5, на 228 минуте